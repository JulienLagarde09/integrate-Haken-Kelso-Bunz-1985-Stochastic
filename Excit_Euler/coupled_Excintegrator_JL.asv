% Excintegrator2
% Integration of a single Excitator with noise (Langevin)
% Noise is additive, scaled by time step, and by variance

clear all; close all
% Euler integration parameters
dt = 0.03; % timestep
iters = 10000; %path length
time = [0:dt:iters*dt];
% Model parameters
a = 0.5;
b = 1;
c = 3;
gamma = 1;
% hkb like coupling
alpha = ;
beta = ;
% Time points of perturbations
dt1 = 10; dt2 = 30; dt3 = 50; dt4 = 70; dt5 = 90; dt6 = 110;
dt7 = 130; dt8 = 150; dt9 = 170; dt10 = 190; dt11 = 210; dt12 = 230;
% Initial conditions (must be a column)
yin = [2 -0.8];
% Noise strength of the Langevin equation (stochastic differential eq.)
D = [0.08 0];

% starts
y = yin; 

 for ii = 1:length(time) % integrate over time
     
            ydot = single_excitator_JL(time(ii),y(ii,:),a,b,c,alpha,beta,gamma,dt1,dt2,dt3,...
                dt4,dt5,dt6,dt7,dt8,dt9,dt10,dt11,dt12);
            
               y(ii+1,:) = y(ii,:) + dt*ydot + sqrt(2*D).*randn(size(ydot)).*dt;
            
 end


% [t,y]=ode15sn('excitator2',tspan, y0,options,a,b,c,alpha,beta,gamma,dt1,dt2,flag,tvect,last,str1,str2); % evaluation of stochastic ODE
% 

% plotting from now on

figure(1)

subplot(3,1,1);
plot(y(:,1),y(:,2),'g')
xlabel('x')
ylabel('y')
title('Excitator with noise')
subplot(3,1,2);
plot(y(:,1),'c.')
ylabel('x')
xlabel('time')
subplot(3,1,3);
plot(y(:,2),'k.')
ylabel('y')
xlabel('time')


%*******************************************************
%*******************************************************



% %SCALING AND PLOTTING 
% vv = evalin('base',str1); ww = evalin('base',str2);
% xpt= start:SampleRate:last; %instead of 1 to 500 as x take 500 points between the time span
% plot(xpt,ww,'r');                  % use that as x coordinate and plot sq1
% plot(xpt,vv,'c --')
% 
% 
%  bb1=0.5*block(t,dt1,0.5);plot(t,bb1,'r');
%  bb2=0.5*block(t,dt2,0.5);plot(t,bb2,'c--');


% % % % 
% % % % 
% % % % % nullclines
% % % %         
% % % % xmin=-2;xmax=-xmin;ymin=-2;ymax=-ymin;
% % % % x=[xmin:0.1:xmax];
% % % % z=-gamma*x+x.^3/3; 
% % % % hold on;plot(x,z,'r')
% % % % if abs(b) > 0
% % % %     z = -1/b*( x - a );
% % % % else
% % % %     btilde=0.0001; z = -1/btilde*( x - a );
% % % % end
% % % % plot(x,z,'g')
% % % % 
% % % % % S=-atan(10*x);
% % % % % plot(x,S,'r--');
% % % % 
% % % % xlabel('x')
% % % % ylabel('y')
% % % % title('Phase space diagram')
% % % % axis([1.1*xmin 1.1*xmax 1.1*ymin 1.1*ymax])
